create_package()
usethis::create_package()
usethis::create_package(".")
usethis::create_package("")
setwd("D:/andrzej/po_habilitacji/intuitionisticFuzzy")
setwd("D:/andrzej/po_habilitacji")
usethis::create_package("intuitionisticFuzzy")
library(devtools)
library(devtools)
install.packages("devtools")
library(devtools)
devtools::load_all()
?aggregateToIntuitionisticRepresentation
set.seed(823)
data<-sample(1:7,26*13*8,replace=T)
dim(data)<-c(26*13,8)
nrColumns<-8
primary<-data.frame(name=rep(LETTERS,each=13),data)
pattern<-rep(c(1,0,0),nrColumns)
colnames(pattern)<-paste(rep(colnames(primary)[-1],each=3),c("mi","ni","pi"))
data
aggregateToIntuitionisticRepresentation(data)
exit
data
primary<-data
names<-unique(primary[,1])
clnames<-colnames(primary[,-1])
namecolumn<-colnames(primary)[1]
fuzzy<-array(0,c(length(names),(ncol(primary)-1)*3))
t<-filter(primary,!!as.name(namecolumn)==names[1])%>%select(!!as.name(clnames[1]))
aggregateToIntuitionisticRepresentation(as.data.frame(data))
devtools::load_all()
aggregateToIntuitionisticRepresentation(data)
class(primary)
!any(class(primary)=="data.frame")
devtools::load_all()
source("D:/andrzej/po_habilitacji/IFMCDM/R/IFMCDM.r")
set.seed(823)
data<-sample(1:7,26*13*8,replace=T)
dim(data)<-c(26*13,8)
nrColumns<-8
primary<-data.frame(name=rep(LETTERS,each=13),data)
pattern<-rep(c(1,0,0),nrColumns)
colnames(pattern)<-paste(rep(colnames(primary)[-1],each=3),c("mi","ni","pi"))
pattern
inth<-aggregateToIntuitionisticRepresentation(primary)
devtools::load_all()
rm(list = c("IFSM", "intuitionisticSyntheticMeasure"))
devtools::load_all()
inth<-aggregateToIntuitionisticRepresentation(primary)
devtools::load_all()
inth<-aggregateToIntuitionisticRepresentation(primary)
View(inth)
c("1","2")=="1"
if(c("1","2")=="1")
)
if(c("1","2")=="1"){"ok"}
length(NULL)
apply(cbind(data[3*i-2],data[3*i-1],data[3*i]),1,sum)
apply(cbind(data[3*1-2],data[3*1-1],data[3*1]),1,sum)
apply(cbind(data[,3*1-2],data[,3*1-1],data[,3*1]),1,sum)
apply(cbind(inth[,3*1-2],inth[,3*1-1],inth[,3*1]),1,sum)
devtools::load_all()
devtools::load_all()
devtools::load_all()
?IFSM
source("D:/andrzej/po_habilitacji/IFMCDM/R/IFMCDM.r")
devtools::load_all()
devtools::load_all()
?IFSM
?IFTOPSIS
source("D:/andrzej/po_habilitacji/IFMCDM/R/IFMCDM.r")
devtools::load_all()
library(IFMCDM)
?IFSM
?IFTOPSIS
help(IFTOPSIS)
examples(IFTOPSIS)
example(IFTOPSIS)
example(IFTOPSIS)
library(IFMCDM)
example(IFTOPSIS)
devtools::load_all(".")
example(IFTOPSIS)
library(IFMCDM)
example(IFTOPSIS)
devtools::build()
devtools::build(binary = T)
devtools::document()
devtools::install()
library(IFMCDM)
example(IFTOPSIS)
primary
data
inth
devtools::load_all(".")
devtools::load_all(".")
example(IFTOPSIS)
library(IFMCDM)
example(IFTOPSIS)
devtools:install()
devtools::install()
example(IFTOPSIS)
example(IFTOPSIS)
devtools::build(binary = T)
set.seed(823)
data<-sample(1:7,26*13*8,replace=T)
dim(data)<-c(26*13,8)
nrColumns<-8
primary<-data.frame(name=rep(LETTERS,each=13),data)
pattern<-rep(c(1,0,0),nrColumns)
colnames(pattern)<-paste(rep(colnames(primary)[-1],each=3),c("mi","ni","pi"))
inth<-aggregateToIntuitionisticRepresentation(primary)
m<-IFTOPSIS(inth)
print(m)
inth
data>1
set.seed(823)
data<-sample(1:7,26*13*8,replace=T)
dim(data)<-c(26*13,8)
nrColumns<-8
primary<-data.frame(name=rep(LETTERS,each=13),data)
pattern<-rep(c(1,0,0),nrColumns)
colnames(pattern)<-paste(rep(colnames(primary)[-1],each=3),c("mi","ni","pi"))
f<-aggregateToIntuitionisticRepresentation(primary)
m<-IFTOPSIS(f)
print(m)
set.seed(823)
data<-sample(1:7,26*13*8,replace=T)
dim(data)<-c(26*13,8)
nrColumns<-8
primary<-data.frame(name=rep(LETTERS,each=13),data)
f<-aggregateToIntuitionisticRepresentation(primary)
m<-IFTOPSIS(f)
print(m)
f>1
any(f>1)
any(f<0)
f<0
f
devtools::load_all(".")
set.seed(823)
data<-sample(1:7,26*13*8,replace=T)
dim(data)<-c(26*13,8)
nrColumns<-8
primary<-data.frame(name=rep(LETTERS,each=13),data)
f<-aggregateToIntuitionisticRepresentation(primary)
m<-IFTOPSIS(f)
print(m)
devtools::load_all(".")
set.seed(823)
data<-sample(1:7,26*13*8,replace=T)
dim(data)<-c(26*13,8)
nrColumns<-8
primary<-data.frame(name=rep(LETTERS,each=13),data)
f<-aggregateToIntuitionisticRepresentation(primary)
m<-IFTOPSIS(f)
print(m)
f
devtools::load_all(".")
source("D:/andrzej/po_habilitacji/IFMCDM/R/aggregateToIntuitionisticRepresentation.R")
devtools::load_all(".")
rm(list = c("aggregateToIntuitionisticRepresentation"))
devtools::load_all(".")
set.seed(823)
data<-sample(1:7,26*13*8,replace=T)
dim(data)<-c(26*13,8)
nrColumns<-8
primary<-data.frame(name=rep(LETTERS,each=13),data)
f<-aggregateToIntuitionisticRepresentation(primary)
m<-IFTOPSIS(f)
print(m)
devtools::load_all(".")
set.seed(823)
data<-sample(1:7,26*13*8,replace=T)
dim(data)<-c(26*13,8)
nrColumns<-8
primary<-data.frame(name=rep(LETTERS,each=13),data)
f<-aggregateToIntuitionisticRepresentation(primary)
m<-IFTOPSIS(f)
print(m)
devtools::load_all(".")
f<-aggregateToIntuitionisticRepresentation(primary)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
f<-aggregateToIntuitionisticRepresentation(primary)
devtools::load_all(".")
f<-aggregateToIntuitionisticRepresentation(primary)
set.seed(823)
data<-sample(1:7,26*13*8,replace=T)
dim(data)<-c(26*13,8)
nrColumns<-8
primary<-data.frame(name=rep(LETTERS,each=13),data)
f<-aggregateToIntuitionisticRepresentation(primary)
devtools::load_all(".")
f<-aggregateToIntuitionisticRepresentation(primary)
devtools::load_all(".")
set.seed(823)
data<-sample(1:7,26*13*8,replace=T)
dim(data)<-c(26*13,8)
nrColumns<-8
primary<-data.frame(name=rep(LETTERS,each=13),data)
f<-aggregateToIntuitionisticRepresentation(primary)
m<-IFTOPSIS(f)
print(m)
w
devtools::load_all(".")
f<-aggregateToIntuitionisticRepresentation(primary)
m<-IFTOPSIS(f)
m<-IFTOPSIS(f)
devtools::load_all(".")
source("~/.active-rstudio-document")
w
devtools::load_all(".")
m<-IFTOPSIS(f)
source("D:/andrzej/po_habilitacji/IFMCDM/R/IFMCDM.r")
devtools::load_all(".")
devtools::load_all(".")
set.seed(823)
data<-sample(1:7,26*13*8,replace=T)
dim(data)<-c(26*13,8)
nrColumns<-8
primary<-data.frame(name=rep(LETTERS,each=13),data)
f<-aggregateToIntuitionisticRepresentation(primary)
m<-IFTOPSIS(f)
print(m)
devtools::load_all(".")
m<-IFTOPSIS(f)
devtools::load_all(".")
m<-IFTOPSIS(f)
source("D:/andrzej/po_habilitacji/IFMCDM/R/IFMCDM.r")
devtools::load_all(".")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
devtools::load_all(".")
m<-IFTOPSIS(f)
p
p %in% c("dataBounds","idealBounds")
!p %in% c("dataBounds","idealBounds")
devtools::load_all(".")
m<-IFTOPSIS(f)
devtools::load_all(".")
source("D:/andrzej/po_habilitacji/IFMCDM/R/IFMCDM.r")
print(m)
m<-IFTOPSIS(f)
devtools::load_all(".")
source("~/.active-rstudio-document")
source("D:/andrzej/po_habilitacji/IFMCDM/R/IFMCDM.r")
devtools::load_all(".")
devtools::load_all(".")
f<-aggregateToIntuitionisticRepresentation(primary)
set.seed(823)
data<-sample(1:7,26*13*8,replace=T)
dim(data)<-c(26*13,8)
nrColumns<-8
primary<-data.frame(name=rep(LETTERS,each=13),data)
f<-aggregateToIntuitionisticRepresentation(primary)
m<-IFTOPSIS(f)
z
i
devtools::load_all(".")
m<-IFTOPSIS(f)
m
m<-IFSM(f)
print(m)
devtools::load_all(".")
m<-IFSM(f)
print(m)
attr(m,"pattern")
attr(m,"apattern")
attr(m,"antipattern")
m<-IFTOPSIS(f)
attr(m,"antipattern")
attr(m,"anti-pattern")
devtools::load_all(".")
devtools::build(binary=T)
setwd("D:/andrzej/po_habilitacji/intuitionisticFuzzy_aux_files")
library(IFMCDM)
dane<-read.csv2("dane_2.csv",header=TRUE,row.names=1)
options(OutDec=",")
# Obliczenie IFTOPSIS
wynik<-IFTOPSIS(dane, w=c(0.3, 0.7), z=c("s", "d"))
dane
i=1
apply(cbind(data[,3*i-2],data[,3*i-1],data[,3*i]),1,sum)
data<-dane
apply(cbind(data[,3*i-2],data[,3*i-1],data[,3*i]),1,sum)
z=c("s", "d")
z %in% c("s","d")
all(z %in% c("s","d"))
!all(z %in% c("s","d"))
devtools::load_all("D:/andrzej/po_habilitacji/IFMCDM")
print(wynik)
# Obliczenie IFTOPSIS
wynik<-IFTOPSIS(dane, w=c(0.3, 0.7), z=c("s", "d"))
print(wynik)
devtools::load_all("D:/andrzej/po_habilitacji/IFMCDM")
# Obliczenie IFTOPSIS
wynik<-IFTOPSIS(dane, w=c(0.3, 0.7), z=c("s", "d"))
print(wynik)
library(IFMCDM)
setwd("D:/andrzej/po_habilitacji/intuitionisticFuzzy_aux_files")
# Wczytanie danych
dane<-read.csv2("dane_2.csv",header=TRUE,row.names=1)
options(OutDec=",")
# Obliczenie IFTOPSIS
wynik<-IFTOPSIS(dane, w=c(0.3, 0.7), z=c("s", "d"))
devtools::load_all("D:/andrzej/po_habilitacji/IFMCDM")
devtools::build(binary = T)
setwd("D:/andrzej/po_habilitacji/IFMCDM/R")
devtools::load_all("D:/andrzej/po_habilitacji/IFMCDM")
devtools::build(binary = T)
devtools::install()
devtools::build(binary = T)
devtools::load_all("D:/andrzej/po_habilitacji/IFMCDM")
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::load_all("D:/andrzej/po_habilitacji/IFMCDM")
example(package="IFMCDM")
example(*,package="IFMCDM")
example(IFSM,package="IFMCDM")
IFMCDM::IFSM()
?IFMCDM::IFSM
set.seed(823)
data<-sample(1:7,26*13*8,replace=T)
dim(data)<-c(26*13,8)
nrColumns<-8
primary<-data.frame(name=rep(LETTERS,each=13),data)
f<-aggregateToIntuitionisticRepresentation(primary)
print(f)
m<-IFSM(f)
print(m)
set.seed(823)
data<-sample(1:7,26*13*8,replace=T)
dim(data)<-c(26*13,8)
nrColumns<-8
primary<-data.frame(name=rep(LETTERS,each=13),data)
f<-aggregateToIntuitionisticRepresentation(primary)
print(f)
m<-IFSM(f)
print(m)
remove.packages("IFMCDM")
source("D:/andrzej/po_habilitacji/IFMCDM/R/IFMCDM.r")
set.seed(823)
data<-sample(1:7,26*13*8,replace=T)
dim(data)<-c(26*13,8)
nrColumns<-8
primary<-data.frame(name=rep(LETTERS,each=13),data)
f<-aggregateToIntuitionisticRepresentation(primary)
print(f)
m<-IFSM(f)
print(m)
dane<-read.csv2("dane_Ewa.csv")
View(dane)
View(dane)
dane<-read.csv2("dane_Ewa.csv",row.names = 1)
dane<-read.csv2("dane_Ewa.csv",row.names = 1)
wynik<-IFTOPSIS(dane, d="h", w=c(0.4, 0.3, 0.3), z=c("b", "b", "c"),p="idealBounds")
print(wynik)
dane<-read.csv2("dane_Ewa.csv",row.names = 1)
wynik<-IFTOPSIS(dane, d="e", w=c(0.4, 0.3, 0.3), z=c("b", "b", "c"),p="idealBounds")
print(wynik)
source("D:/andrzej/po_habilitacji/IFMCDM/R/IFMCDM.r")
source("D:/andrzej/po_habilitacji/IFMCDM/R/IFMCDM.r")
source("D:/andrzej/po_habilitacji/IFMCDM/R/IFMCDM.r")
devtools::build_manual()
set.seed(823)
data<-sample(1:7,26*13*8,replace=T)
dim(data)<-c(26*13,8)
nrColumns<-8
primary<-data.frame(name=rep(LETTERS,each=13),data)
inth<-aggregateToIntuitionisticRepresentation(primary)
devtools::load_all(".")
inth<-aggregateToIntuitionisticRepresentation(primary)
setwd("D:/andrzej/Dydaktyka/2022-2023-zimowy/Inzynieria Finansowa/zaoczne23")
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Inzynieria Finansowa/zaoczne23/adidas_lm.R")
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Inzynieria Finansowa/zaoczne23/adidas_ln_squares.R")
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Inzynieria Finansowa/zaoczne23/adidas_ln_squares.R")
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Inzynieria Finansowa/zaoczne23/adidas_lm_shorter_time.R")
windows()
plot(predicted,type="l",ylim=c(100,150),col="magenta")
lines(cbind(1:nr_cross_valid,as.vector(real),type="l"))
print("SUM OF SQUARED RESIDUALS")
print(sum((real-predicted)^2))
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Inzynieria Finansowa/zaoczne23/adidas_lm.R")
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Inzynieria Finansowa/zaoczne23/adidas_lm_squares.R")
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Inzynieria Finansowa/zaoczne23/adidas_lm_ret_with_chart.r")
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Inzynieria Finansowa/zaoczne23/adidas_lm_ret_with_chart.r")
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Inzynieria Finansowa/zaoczne23/adidas_lm_ret_with_chart.r")
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Inzynieria Finansowa/zaoczne23/adidas_lm_ret_with_chart.r")
windows()
# par(mfrow=c(2,1))
plot(cbind((last_minus_n-1):length(return),predicted),type="l",col="blue",ylim=c(100,150))
lines(cbind(1:nr_cross_valid,as.vector(real),type="l"))
as.vector(real)
windows()
# par(mfrow=c(2,1))
plot(cbind((last_minus_n-1):length(return),predicted),type="l",col="blue",ylim=c(100,150))
lines(cbind(1:nr_cross_valid,as.vector(real),type="l"))
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Inzynieria Finansowa/zaoczne23/adidas_lm_ret_with_chart.r")
windows()
# par(mfrow=c(2,1))
plot(cbind((last_minus_n-1):length(return),predicted),type="l",col="blue",ylim=c(100,150))
windows()
plot(predicted,type="l",ylim=c(100,300))
lines(cbind(1:nr_cross_valid,as.vector(real),type="l"))
print(sum((real-predicted)^2))
windows()
# par(mfrow=c(2,1))
plot(predicted,type="l",col="blue",ylim=c(100,150))
lines(cbind(1:nr_cross_valid,as.vector(real),type="l"))
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Inzynieria Finansowa/zaoczne23/adidas_arima_variants.r")
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Inzynieria Finansowa/zaoczne23/adidas_forects_auto.r")
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Inzynieria Finansowa/zaoczne23/adidas_GARCH.r")
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Inzynieria Finansowa/zaoczne23/adidas_GARCH.r")
setwd("D:/andrzej/Dydaktyka/2022-2023-zimowy/Econometrics")
library(readxl)
data<-read_xls("hprice.xls",sheet = 1,col_names = T)
model<-lm(`sale price`~ `lot size` + `#bedroom`+`#bath`+`#stories` ,data)
plot(data)
abline(model$coefficients,col="blue")
View(data)
library(readxl)
data<-read_xls("hprice.xls",sheet = 1,col_names = T)
model<-lm(`sale price`~ `lot size` + `#bedroom`+`#bath`+`#stories` ,data)
plot(data[,1:2])
abline(model$coefficients,col="blue")
abline(model$coefficients,col="blue")
abline(model$coefficients[1],model$coefficients[2],col="blue")
model$coefficients
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Econometrics/houses_lines.r")
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Econometrics/houses_lines.r")
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Econometrics/houses_lines.r")
View(data)
model$coefficients
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Econometrics/houses_lines.r")
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Econometrics/houses_lines.r")
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Econometrics/houses_lines.r")
source("D:/andrzej/Dydaktyka/2022-2023-zimowy/Econometrics/houses_lines.r")
setwd("D:/andrzej/po_habilitacji/IFMCDM")
library(devtools)
?dist
devtools::build_manual()
devtools::build_manual()
12250*0.23
12250*1.23
source("D:/andrzej/po_habilitacji/IFMCDM/R/IFconversion.r", encoding = 'UTF-8')
primary
source("D:/andrzej/po_habilitacji/IFMCDM/R/IFconversion.r", encoding = 'UTF-8')
source("D:/andrzej/po_habilitacji/IFMCDM/R/IFconversion.r", encoding = 'UTF-8')
source("D:/andrzej/po_habilitacji/IFMCDM/R/IFconversion.r", encoding = 'UTF-8')
View(inth)
round(mean(min(primary[,-1]),max(primary[,-1]))
)
max(primary[,-1]
)
mean(min(primary[,-1]),max(primary[,-1]))
min(primary[,-1]),max(primary[,-1])
min(primary[,-1])
mean(min(primary[,-1]),max(primary[,-1]))
mean(c(min(primary[,-1]),max(primary[,-1])))
source("D:/andrzej/po_habilitacji/IFMCDM/R/IFconversion.r", encoding = 'UTF-8')
View(inth)
devtools::build_manual()
data("data_IF")
data_IF
data_IFdata_IF[1,1<-NA]
data_IF[1,1]<-NA
data_IF[3,1]<-NA
data_IF[2,4]<-NA
data_IF
min(data_IF[,1])
data_IF[,1]>0
sum(data_IF[,1]>0)
sum(data_IF[,1]>0,na.rm=T)
replace_na(data_IF,-1)
tidyr::replace_na(data_IF,-1)
data_IF
is.na(data_IF[1,1])
na_if(data_IF,-1)
dplyr::na_if(data_IF,-1)
mutate(primary, across(everything(), ~replace_na(.x, -1)))
library(dplyr)
primary<-data_IF
mutate(primary, across(everything(), ~replace_na(.x, -1)))
primary<-as.data.frame(data_IF)
mutate(primary, across(everything(), ~replace_na(.x, -1)))
library(tidyr)
mutate(primary, across(everything(), ~replace_na(.x, -1)))
mutate(primary, across(everything(), ~if_na(.x, -1)))
mutate(primary, across(everything(), ~na_if(.x, -1)))
mutate(primary, across(everything(), ~replace_na(.x, -1)))
devtools::build_manual()
source("~/.active-rstudio-document")
install.packages("tidyquant")
library(tidyquant)
source("~/.active-rstudio-document")
library(symbolicDA)
library(symbolicDA)
examples(parse.SO)
example(parse.SO)
cars<-parse.SO("cars")
setwd("D:/andrzej/robocza/SymbolicDA.wrk")
source("D:/andrzej/robocza/SymbolicDA.wrk/pars_example.r")
cars<-parse.SO("cars")
View(cars)
7*350*20*3
